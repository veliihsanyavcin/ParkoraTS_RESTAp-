{"id":"ts/typeService.ts","dependencies":[{"name":"C:\\Users\\veli\\Source\\ParkoraTS_RESTApi\\tsconfig.json","includedInParent":true,"mtime":1602074671588},{"name":"C:\\Users\\veli\\Source\\ParkoraTS_RESTApi\\package.json","includedInParent":true,"mtime":1602257334600}],"generated":{"js":"\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TypeService = void 0;\n\nvar TypeService = /*#__PURE__*/function () {\n  function TypeService() {\n    _classCallCheck(this, TypeService);\n  }\n\n  _createClass(TypeService, [{\n    key: \"getTypes\",\n    value: function getTypes() {\n      return fetch('https://localhost:44333/types', {\n        method: 'GET',\n        // body: \"\",\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(function (r) {\n        return r.json();\n      });\n    }\n  }]);\n\n  return TypeService;\n}();\n\nexports.TypeService = TypeService;"},"sourceMaps":{"js":{"mappings":[{"source":"ts/typeService.ts","name":null,"original":{"line":3,"column":13},"generated":{"line":14,"column":4}},{"source":"ts/typeService.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":21,"column":31}},{"source":"ts/typeService.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":22,"column":0}},{"source":"ts/typeService.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":22,"column":13}},{"source":"ts/typeService.ts","name":null,"original":{"line":10,"column":20},"generated":{"line":22,"column":18}},{"source":"ts/typeService.ts","name":null,"original":{"line":10,"column":21},"generated":{"line":22,"column":19}},{"source":"ts/typeService.ts","name":null,"original":{"line":10,"column":20},"generated":{"line":22,"column":50}},{"source":"ts/typeService.ts","name":null,"original":{"line":10,"column":54},"generated":{"line":22,"column":52}},{"source":"ts/typeService.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":23,"column":0}},{"source":"ts/typeService.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":23,"column":8}},{"source":"ts/typeService.ts","name":null,"original":{"line":11,"column":18},"generated":{"line":23,"column":14}},{"source":"ts/typeService.ts","name":null,"original":{"line":11,"column":20},"generated":{"line":23,"column":16}},{"source":"ts/typeService.ts","name":null,"original":{"line":10,"column":54},"generated":{"line":23,"column":21}},{"source":"ts/typeService.ts","name":null,"original":{"line":12,"column":11},"generated":{"line":24,"column":0}},{"source":"ts/typeService.ts","name":null,"original":{"line":13,"column":12},"generated":{"line":25,"column":0}},{"source":"ts/typeService.ts","name":null,"original":{"line":13,"column":12},"generated":{"line":25,"column":8}},{"source":"ts/typeService.ts","name":null,"original":{"line":13,"column":19},"generated":{"line":25,"column":15}},{"source":"ts/typeService.ts","name":null,"original":{"line":13,"column":21},"generated":{"line":25,"column":17}},{"source":"ts/typeService.ts","name":null,"original":{"line":14,"column":16},"generated":{"line":26,"column":0}},{"source":"ts/typeService.ts","name":null,"original":{"line":14,"column":32},"generated":{"line":26,"column":26}},{"source":"ts/typeService.ts","name":null,"original":{"line":13,"column":21},"generated":{"line":27,"column":0}},{"source":"ts/typeService.ts","name":null,"original":{"line":10,"column":54},"generated":{"line":28,"column":0}},{"source":"ts/typeService.ts","name":null,"original":{"line":10,"column":20},"generated":{"line":28,"column":7}},{"source":"ts/typeService.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":28,"column":8}},{"source":"ts/typeService.ts","name":null,"original":{"line":16,"column":11},"generated":{"line":28,"column":9}},{"source":"ts/typeService.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":28,"column":13}},{"source":"ts/typeService.ts","name":null,"original":{"line":16,"column":16},"generated":{"line":28,"column":14}},{"source":"ts/typeService.ts","name":null,"original":{"line":16,"column":16},"generated":{"line":28,"column":24}},{"source":"ts/typeService.ts","name":null,"original":{"line":16,"column":17},"generated":{"line":28,"column":25}},{"source":"ts/typeService.ts","name":null,"original":{"line":16,"column":17},"generated":{"line":29,"column":0}},{"source":"ts/typeService.ts","name":null,"original":{"line":16,"column":21},"generated":{"line":29,"column":15}},{"source":"ts/typeService.ts","name":null,"original":{"line":16,"column":22},"generated":{"line":29,"column":16}},{"source":"ts/typeService.ts","name":null,"original":{"line":16,"column":23},"generated":{"line":29,"column":17}},{"source":"ts/typeService.ts","name":null,"original":{"line":16,"column":21},"generated":{"line":29,"column":21}},{"source":"ts/typeService.ts","name":null,"original":{"line":16,"column":17},"generated":{"line":29,"column":23}},{"source":"ts/typeService.ts","name":null,"original":{"line":16,"column":17},"generated":{"line":30,"column":0}},{"source":"ts/typeService.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":30,"column":7}},{"source":"ts/typeService.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":30,"column":8}},{"source":"ts/typeService.ts","name":null,"original":{"line":18,"column":5},"generated":{"line":31,"column":0}},{"source":"ts/typeService.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":37,"column":0}},{"source":"ts/typeService.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":37,"column":7}},{"source":"ts/typeService.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":37,"column":8}},{"source":"ts/typeService.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":37,"column":19}},{"source":"ts/typeService.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":37,"column":22}},{"source":"ts/typeService.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":37,"column":33}}],"sources":{"ts/typeService.ts":"import { VehicleType } from \"./vehicletype\";\r\n\r\nexport class TypeService {\r\n   \r\n\r\n   \r\n   \r\n    getTypes() : Promise<string[]> {\r\n        \r\n        return fetch('https://localhost:44333/types', {\r\n            method: 'GET',\r\n           // body: \"\",\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        }).then(r => r.json());\r\n       \r\n    }\r\n \r\n   \r\n\r\n}"},"lineCount":null}},"error":null,"hash":"187d25760063590e3d916b295540d420","cacheData":{"env":{}}}